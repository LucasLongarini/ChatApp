{"version":3,"sources":["Components/UserAvatar/UserAvatar.js","Views/ChatView/Components/ChatMessage/ChatMessage.js","Views/ChatView/Components/ChatList/ChatList.js","Views/ChatView/Components/ChatWindow/ChatWindow.js","Views/ChatView/Components/UserProfile/UserProfile.js","Views/ChatView/Components/UserWindow/UserWindow.js","Views/ChatView/ChatView.js","index.js"],"names":["UserAvatar","style","background","this","props","color","className","React","Component","ChatMessage","isUser","message","date","Date","time","user","username","toLocaleTimeString","ChatList","messages","map","ChatWindow","sendMessage","bind","textChanged","onKeyDown","state","value","handleMessageSent","setState","e","key","target","id","placeholder","onChange","onClick","UserProfile","UserWindow","users","undefined","ChatView","toast","configure","handleLogin","handleNewMessages","handleNewUsers","handleNewUsername","handleError","socket","io","on","data","newUsername","cookie","set","expires","sort","a","b","dateA","getTime","forEach","emit","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c65bd0d.chunk.js","sourcesContent":["import React from 'react';\nimport \"./UserAvatar.css\"\n\nclass UserAvatar extends React.Component {\n  render() {\n    return (\n      <div style={{background: `${this.props.color}`}} className=\"user-avatar shadow1\">\n          <i className=\"fas fa-user\"></i>\n      </div>\n    );\n  }\n}\n\nexport default UserAvatar;","import React from 'react';\nimport \"./ChatMessage.css\"\n\nimport Avatar from \"../../../../Components/UserAvatar/UserAvatar\"\n\nclass ChatMessage extends React.Component {\n  render() {\n    let isUser = this.props.message.isUser ? \"user\" : \"\";\n    let message = this.props.message;\n\n    let date = new Date(message.time);\n    return (\n      <div className={`chat-message-container ${isUser}`}>\n        <div className=\"avatar-container\">\n            <Avatar color={message.user.color}/>\n        </div>\n        <div className={`chat-bubble shadow1 ${isUser}`}>\n            <h4 className=\"other\">{message.user.username}</h4>\n            <p>{message.message}</p>\n            <h6>{date.toLocaleTimeString()}</h6>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChatMessage;","import React from 'react';\nimport \"./ChatList.css\"\n\nimport ChatMessage from \"../ChatMessage/ChatMessage\"\n\nclass ChatList extends React.Component {\n  render() {\n    const messages = this.props.messages.map((message) => {\n      return <ChatMessage key={message.time} message={message}/>\n    });\n    return (\n      <div className=\"chat-list\">\n          {messages}\n      </div>\n    );\n  }\n}\n\nexport default ChatList;","import React from 'react';\nimport \"./ChatWindow.css\"\nimport ChatList from \"../ChatList/ChatList\"\n\nclass ChatWindow extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.sendMessage = this.sendMessage.bind(this);\n    this.textChanged = this.textChanged.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.state = {value: ''};\n  }\n\n  sendMessage() {\n    if (this.state.value !== '') {\n      this.props.handleMessageSent(this.state.value);\n      this.setState({value: ''});\n    }\n  }\n\n  onKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.sendMessage();\n    }\n  }\n\n  textChanged(e) {\n    this.setState({value: e.target.value});\n  }\n\n  render() {\n    return (\n      <div className=\"container chat-container\">\n        {this.props.user && <p id=\"user-indication\">You are <span>{this.props.user.username}</span></p>}\n        <ChatList messages={this.props.messages}/>\n        <div className=\"inputs\">\n          <input id=\"input\" className=\"neo-shadow-inner\" placeholder=\"Type a message...\" onKeyDown={this.onKeyDown} value={this.state.value} onChange={this.textChanged}></input>\n          <button id=\"send-button\" className=\"neo-shadow-outer\" onClick={this.sendMessage}>Send</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChatWindow;","import React from 'react';\nimport \"./UserProfile.css\"\nimport UserAvatar from \"../../../../Components/UserAvatar/UserAvatar\"\n\nclass UserProfile extends React.Component {\n  render() {\n    return (\n      <div className=\"user-profile-container shadow1\">\n        <UserAvatar color={this.props.user.color}/>\n        <h3>{`${this.props.user.username} ${this.props.user.isUser ? '(you)': ''}`}</h3>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","import React from 'react';\nimport \"./UserWindow.css\"\nimport UserProfile from '../UserProfile/UserProfile'\n\nclass UserWindow extends React.Component {\n  render() {\n    const users = this.props.users.map((user) => {\n      if (this.props.user != undefined && \n          this.props.user.username === user.username) {\n        user.isUser = true;\n      }\n      return <UserProfile key={user.username} user={user}/>\n    });\n\n    return (\n      <div className=\"container user-container\">\n        <h1>Online Users</h1>\n        <div className=\"user-list\">\n          {users}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserWindow;","import React from 'react';\nimport './ChatView.css'\nimport ChatWindow from './Components/ChatWindow/ChatWindow';\nimport UserWindow from './Components/UserWindow/UserWindow';\nimport io from 'socket.io-client';\nimport cookie from 'js-cookie';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nclass ChatView extends React.Component {\n\n  socket;\n  constructor(props) {\n    super(props);\n    toast.configure();\n    this.handleMessageSent = this.handleMessageSent.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleNewMessages = this.handleNewMessages.bind(this);\n    this.handleNewUsers = this.handleNewUsers.bind(this);\n    this.handleNewUsername = this.handleNewUsername.bind(this);\n    this.handleError = this.handleError.bind(this);\n\n    this.state = {\n      user: undefined,\n      messages: [],\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    // get cookies before (or web storage)\n    this.socket = io();\n    this.handleLogin();\n    this.handleError();\n    this.handleNewUsers();\n    this.handleNewMessages();\n    this.handleNewUsername();\n  }\n\n  handleLogin() {\n    this.socket.on('login', data => {\n\n      if (data.newUsername) {\n        cookie.set('username', data.user.username, {expires: 1000});\n      }\n      \n      this.setState({user: data.user});\n      data.messages.sort((a, b) => {\n        let dateA = new Date(a.time).getTime();\n        let dateB = new Date(b.time).getTime();\n        return dateB - dateA;\n      });\n      data.messages.forEach(message => {\n        if (this.state.user != undefined && \n          message.user.username === this.state.user.username) {\n            message.isUser = true;\n          }\n      });\n      this.setState({messages: data.messages, users: data.users});\n    });\n  }\n\n  handleNewUsername() {\n    this.socket.on('new username', username => {\n      this.state.user.username = username;\n      this.setState({user: this.state.user});\n      cookie.set('username', username, {expires: 1000});\n    });\n  }\n\n  handleNewMessages() {\n    this.socket.on('new messages', messages => {\n      messages.sort((a, b) => {\n        let dateA = new Date(a.time).getTime();\n        let dateB = new Date(b.time).getTime();\n        return dateB - dateA;\n      });\n      messages.forEach(message => {\n        if (this.state.user != undefined && \n          message.user.username === this.state.user.username) {\n            message.isUser = true;\n          }\n      });\n      this.setState({messages: messages});\n    });\n  }\n\n  handleNewUsers() {\n    this.socket.on('new users', users => {\n      this.setState({users: users});\n    });\n  }\n\n  handleMessageSent(message) {\n    this.socket.emit('send message', {message: message, user:this.state.user});\n  }\n  \n  handleError() {\n    this.socket.on('error message', error => {\n      toast.error(error);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"chat-view\">\n        <ChatWindow user={this.state.user} messages={this.state.messages} handleMessageSent={this.handleMessageSent}/>\n        <UserWindow user={this.state.user} users={this.state.users}/>\n      </div>\n    );\n  }\n}\n\nexport default ChatView;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ChatView from './Views/ChatView/ChatView';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChatView />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}